{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as GoogleSignIn from 'expo-google-sign-in';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSignedIn = _useState2[0],\n    setIsSignedIn = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    phone = _useState6[0],\n    setPhone = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var signInWithGoogleAsync = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (type === 'success') {\n        setIsSignedIn(true);\n        console.log(user);\n      } else {\n        setIsSignedIn(false);\n        console.log('Google Sign-In failed');\n      }\n    });\n    return function signInWithGoogleAsync() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var signUpWithEmail = function signUpWithEmail() {\n    console.log('Email:', email);\n    console.log('Phone:', phone);\n    console.log('Password:', password);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: isSignedIn ? 'Signed In' : 'Not Signed In'\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Phone\",\n        value: phone,\n        onChangeText: function onChangeText(text) {\n          return setPhone(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input\n      })]\n    }), _jsx(Button, {\n      title: \"Sign Up with Email\",\n      onPress: signUpWithEmail\n    }), _jsx(Button, {\n      title: \"Sign In with Google\",\n      onPress: signInWithGoogleAsync\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    marginBottom: 20,\n    width: '80%'\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","GoogleSignIn","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_useState","_useState2","_slicedToArray","isSignedIn","setIsSignedIn","_useState3","_useState4","email","setEmail","_useState5","_useState6","phone","setPhone","_useState7","_useState8","password","setPassword","signInWithGoogleAsync","_ref","_asyncToGenerator","type","console","log","user","apply","arguments","signUpWithEmail","style","styles","container","children","inputContainer","placeholder","value","onChangeText","text","input","secureTextEntry","title","onPress","create","flex","justifyContent","alignItems","marginBottom","width","height","borderColor","borderWidth","padding"],"sources":["D:/companies/vishnu/micApp/rev0.0/micAppTestFullStack/my-mic-stack-app/mobileApps/micCustomerClient/android/app/src/screens/RegisterScreen.js"],"sourcesContent":["// SignUpScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\nimport * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\nconst SignUpScreen = () => {\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const signInWithGoogleAsync = async () => {\r\n    // ... (unchanged)\r\n\r\n    if (type === 'success') {\r\n      setIsSignedIn(true);\r\n      console.log(user);\r\n    } else {\r\n      setIsSignedIn(false);\r\n      console.log('Google Sign-In failed');\r\n    }\r\n  };\r\n\r\n  const signUpWithEmail = () => {\r\n    // Implement your own logic for email/password sign-up\r\n    console.log('Email:', email);\r\n    console.log('Phone:', phone);\r\n    console.log('Password:', password);\r\n\r\n    // Add your authentication logic here, for example, using Firebase or your backend API.\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>{isSignedIn ? 'Signed In' : 'Not Signed In'}</Text>\r\n      \r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n          style={styles.input}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Phone\"\r\n          value={phone}\r\n          onChangeText={(text) => setPhone(text)}\r\n          style={styles.input}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n          style={styles.input}\r\n        />\r\n      </View>\r\n      \r\n      <Button title=\"Sign Up with Email\" onPress={signUpWithEmail} />\r\n\r\n      <Button title=\"Sign In with Google\" onPress={signInWithGoogleAsync} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 20,\r\n    width: '80%',\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default SignUpScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    navigation.navigate('Home');\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n}\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","navigate","children","placeholder","value","onChangeText","text","secureTextEntry","title","onPress"],"sources":["D:/companies/vishnu/micApp/rev0.0/micAppTestFullStack/my-mic-stack-app/mobileapp/miccustomer-client/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button } from 'react-native';\r\n\r\nfunction LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Here, you can handle user login logic.\r\n    // For this example, we'll simply navigate to a dashboard or home screen.\r\n    navigation.navigate('Home');\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>Login</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        secureTextEntry\r\n      />\r\n      <Button title=\"Login\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,SAASC,WAAWA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC/B,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAGxBV,UAAU,CAACW,QAAQ,CAAC,MAAM,CAAC;EAC7B,CAAC;EAED,OACEd,KAAA,CAACP,IAAI;IAAAsB,QAAA,GACHjB,IAAA,CAACJ,IAAI;MAAAqB,QAAA,EAAC;IAAK,CAAM,CAAC,EAClBjB,IAAA,CAACH,SAAS;MACRqB,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEV,KAAM;MACbW,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKX,QAAQ,CAACW,IAAI,CAAC;MAAA;IAAC,CACxC,CAAC,EACFrB,IAAA,CAACH,SAAS;MACRqB,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEN,QAAS;MAChBO,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKP,WAAW,CAACO,IAAI,CAAC;MAAA,CAAC;MAC1CC,eAAe;IAAA,CAChB,CAAC,EACFtB,IAAA,CAACF,MAAM;MAACyB,KAAK,EAAC,OAAO;MAACC,OAAO,EAAET;IAAY,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEX;AAEA,eAAeZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NavigationDelegate = void 0;\nvar Navigation_1 = require(\"./Navigation\");\nvar NativeCommandsSender_1 = require(\"./adapters/NativeCommandsSender\");\nvar NativeEventsReceiver_1 = require(\"./adapters/NativeEventsReceiver\");\nvar AppRegistryService_1 = require(\"./adapters/AppRegistryService\");\nvar NavigationDelegate = function () {\n  function NavigationDelegate() {\n    _classCallCheck(this, NavigationDelegate);\n    this.concreteNavigation = this.createConcreteNavigation(new NativeCommandsSender_1.NativeCommandsSender(), new NativeEventsReceiver_1.NativeEventsReceiver(), new AppRegistryService_1.AppRegistryService());\n  }\n  _createClass(NavigationDelegate, [{\n    key: \"createConcreteNavigation\",\n    value: function createConcreteNavigation(nativeCommandsSender, nativeEventsReceiver, appRegistryService) {\n      return new Navigation_1.NavigationRoot(nativeCommandsSender, nativeEventsReceiver, appRegistryService);\n    }\n  }, {\n    key: \"registerComponent\",\n    value: function registerComponent(componentName, componentProvider, concreteComponentProvider) {\n      return this.concreteNavigation.registerComponent(componentName, componentProvider, concreteComponentProvider);\n    }\n  }, {\n    key: \"addOptionProcessor\",\n    value: function addOptionProcessor(optionPath, processor) {\n      return this.concreteNavigation.addOptionProcessor(optionPath, processor);\n    }\n  }, {\n    key: \"addLayoutProcessor\",\n    value: function addLayoutProcessor(processor) {\n      return this.concreteNavigation.addLayoutProcessor(processor);\n    }\n  }, {\n    key: \"setLazyComponentRegistrator\",\n    value: function setLazyComponentRegistrator(lazyRegistratorFn) {\n      this.concreteNavigation.setLazyComponentRegistrator(lazyRegistratorFn);\n    }\n  }, {\n    key: \"registerComponentWithRedux\",\n    value: function registerComponentWithRedux(componentName, getComponentClassFunc, ReduxProvider, reduxStore) {\n      return this.concreteNavigation.registerComponentWithRedux(componentName, getComponentClassFunc, ReduxProvider, reduxStore);\n    }\n  }, {\n    key: \"setRoot\",\n    value: function setRoot(layout) {\n      return this.concreteNavigation.setRoot(layout);\n    }\n  }, {\n    key: \"setDefaultOptions\",\n    value: function setDefaultOptions(options) {\n      this.concreteNavigation.setDefaultOptions(options);\n    }\n  }, {\n    key: \"mergeOptions\",\n    value: function mergeOptions(componentId, options) {\n      this.concreteNavigation.mergeOptions(componentId, options);\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(componentId, props, callback) {\n      this.concreteNavigation.updateProps(componentId, props, callback);\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal(layout) {\n      return this.concreteNavigation.showModal(layout);\n    }\n  }, {\n    key: \"dismissModal\",\n    value: function dismissModal(componentId, mergeOptions) {\n      return this.concreteNavigation.dismissModal(componentId, mergeOptions);\n    }\n  }, {\n    key: \"dismissAllModals\",\n    value: function dismissAllModals(mergeOptions) {\n      return this.concreteNavigation.dismissAllModals(mergeOptions);\n    }\n  }, {\n    key: \"push\",\n    value: function push(componentId, layout) {\n      return this.concreteNavigation.push(componentId, layout);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop(componentId, mergeOptions) {\n      return this.concreteNavigation.pop(componentId, mergeOptions);\n    }\n  }, {\n    key: \"popTo\",\n    value: function popTo(componentId, mergeOptions) {\n      return this.concreteNavigation.popTo(componentId, mergeOptions);\n    }\n  }, {\n    key: \"popToRoot\",\n    value: function popToRoot(componentId, mergeOptions) {\n      return this.concreteNavigation.popToRoot(componentId, mergeOptions);\n    }\n  }, {\n    key: \"setStackRoot\",\n    value: function setStackRoot(componentId, layout) {\n      return this.concreteNavigation.setStackRoot(componentId, layout);\n    }\n  }, {\n    key: \"showOverlay\",\n    value: function showOverlay(layout) {\n      return this.concreteNavigation.showOverlay(layout);\n    }\n  }, {\n    key: \"dismissOverlay\",\n    value: function dismissOverlay(componentId) {\n      return this.concreteNavigation.dismissOverlay(componentId);\n    }\n  }, {\n    key: \"dismissAllOverlays\",\n    value: function dismissAllOverlays() {\n      return this.concreteNavigation.dismissAllOverlays();\n    }\n  }, {\n    key: \"getLaunchArgs\",\n    value: function getLaunchArgs() {\n      return this.concreteNavigation.getLaunchArgs();\n    }\n  }, {\n    key: \"events\",\n    value: function events() {\n      return this.concreteNavigation.events();\n    }\n  }, {\n    key: \"constants\",\n    value: function () {\n      var _constants = _asyncToGenerator(function* () {\n        return yield this.concreteNavigation.constants();\n      });\n      function constants() {\n        return _constants.apply(this, arguments);\n      }\n      return constants;\n    }()\n  }, {\n    key: \"constantsSync\",\n    value: function constantsSync() {\n      return this.concreteNavigation.constantsSync();\n    }\n  }, {\n    key: \"TouchablePreview\",\n    get: function get() {\n      return this.concreteNavigation.TouchablePreview;\n    }\n  }, {\n    key: \"mockNativeComponents\",\n    value: function mockNativeComponents(mockedNativeCommandsSender, mockedNativeEventsReceiver, mockedAppRegistryService) {\n      this.concreteNavigation = this.createConcreteNavigation(mockedNativeCommandsSender, mockedNativeEventsReceiver, mockedAppRegistryService);\n    }\n  }, {\n    key: \"mock\",\n    get: function get() {\n      return {\n        store: this.concreteNavigation.store\n      };\n    }\n  }]);\n  return NavigationDelegate;\n}();\nexports.NavigationDelegate = NavigationDelegate;","map":{"version":3,"names":["_asyncToGenerator","require","_classCallCheck","_createClass","Object","defineProperty","exports","value","NavigationDelegate","Navigation_1","NativeCommandsSender_1","NativeEventsReceiver_1","AppRegistryService_1","concreteNavigation","createConcreteNavigation","NativeCommandsSender","NativeEventsReceiver","AppRegistryService","key","nativeCommandsSender","nativeEventsReceiver","appRegistryService","NavigationRoot","registerComponent","componentName","componentProvider","concreteComponentProvider","addOptionProcessor","optionPath","processor","addLayoutProcessor","setLazyComponentRegistrator","lazyRegistratorFn","registerComponentWithRedux","getComponentClassFunc","ReduxProvider","reduxStore","setRoot","layout","setDefaultOptions","options","mergeOptions","componentId","updateProps","props","callback","showModal","dismissModal","dismissAllModals","push","pop","popTo","popToRoot","setStackRoot","showOverlay","dismissOverlay","dismissAllOverlays","getLaunchArgs","events","_constants","constants","apply","arguments","constantsSync","get","TouchablePreview","mockNativeComponents","mockedNativeCommandsSender","mockedNativeEventsReceiver","mockedAppRegistryService","store"],"sources":["D:/companies/vishnu/micApp/rev0.0/micAppTestFullStack/node_modules/react-native-navigation/lib/dist/src/NavigationDelegate.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NavigationDelegate = void 0;\nconst Navigation_1 = require(\"./Navigation\");\nconst NativeCommandsSender_1 = require(\"./adapters/NativeCommandsSender\");\nconst NativeEventsReceiver_1 = require(\"./adapters/NativeEventsReceiver\");\nconst AppRegistryService_1 = require(\"./adapters/AppRegistryService\");\nclass NavigationDelegate {\n    concreteNavigation;\n    constructor() {\n        this.concreteNavigation = this.createConcreteNavigation(new NativeCommandsSender_1.NativeCommandsSender(), new NativeEventsReceiver_1.NativeEventsReceiver(), new AppRegistryService_1.AppRegistryService());\n    }\n    createConcreteNavigation(nativeCommandsSender, nativeEventsReceiver, appRegistryService) {\n        return new Navigation_1.NavigationRoot(nativeCommandsSender, nativeEventsReceiver, appRegistryService);\n    }\n    /**\n     * Every navigation component in your app must be registered with a unique name.\n     * The component itself is a traditional React component extending React.Component.\n     */\n    registerComponent(componentName, componentProvider, concreteComponentProvider) {\n        return this.concreteNavigation.registerComponent(componentName, componentProvider, concreteComponentProvider);\n    }\n    /**\n     * Adds an option processor which allows option interpolation by optionPath.\n     */\n    addOptionProcessor(optionPath, processor) {\n        return this.concreteNavigation.addOptionProcessor(optionPath, processor);\n    }\n    /**\n     * Method to be invoked when a layout is processed and is about to be created. This can be used to change layout options or even inject props to components.\n     */\n    addLayoutProcessor(processor) {\n        return this.concreteNavigation.addLayoutProcessor(processor);\n    }\n    setLazyComponentRegistrator(lazyRegistratorFn) {\n        this.concreteNavigation.setLazyComponentRegistrator(lazyRegistratorFn);\n    }\n    /**\n     * Utility helper function like registerComponent,\n     * wraps the provided component with a react-redux Provider with the passed redux store\n     * @deprecated\n     */\n    registerComponentWithRedux(componentName, getComponentClassFunc, ReduxProvider, reduxStore) {\n        return this.concreteNavigation.registerComponentWithRedux(componentName, getComponentClassFunc, ReduxProvider, reduxStore);\n    }\n    /**\n     * Reset the app to a new layout\n     */\n    setRoot(layout) {\n        return this.concreteNavigation.setRoot(layout);\n    }\n    /**\n     * Set default options to all screens. Useful for declaring a consistent style across the app.\n     */\n    setDefaultOptions(options) {\n        this.concreteNavigation.setDefaultOptions(options);\n    }\n    /**\n     * Change a component's navigation options\n     */\n    mergeOptions(componentId, options) {\n        this.concreteNavigation.mergeOptions(componentId, options);\n    }\n    /**\n     * Update a mounted component's props\n     */\n    updateProps(componentId, props, callback) {\n        this.concreteNavigation.updateProps(componentId, props, callback);\n    }\n    /**\n     * Show a screen as a modal.\n     */\n    showModal(layout) {\n        return this.concreteNavigation.showModal(layout);\n    }\n    /**\n     * Dismiss a modal by componentId. The dismissed modal can be anywhere in the stack.\n     */\n    dismissModal(componentId, mergeOptions) {\n        return this.concreteNavigation.dismissModal(componentId, mergeOptions);\n    }\n    /**\n     * Dismiss all Modals\n     */\n    dismissAllModals(mergeOptions) {\n        return this.concreteNavigation.dismissAllModals(mergeOptions);\n    }\n    /**\n     * Push a new layout into this screen's navigation stack.\n     */\n    push(componentId, layout) {\n        return this.concreteNavigation.push(componentId, layout);\n    }\n    /**\n     * Pop a component from the stack, regardless of it's position.\n     */\n    pop(componentId, mergeOptions) {\n        return this.concreteNavigation.pop(componentId, mergeOptions);\n    }\n    /**\n     * Pop the stack to a given component\n     */\n    popTo(componentId, mergeOptions) {\n        return this.concreteNavigation.popTo(componentId, mergeOptions);\n    }\n    /**\n     * Pop the component's stack to root.\n     */\n    popToRoot(componentId, mergeOptions) {\n        return this.concreteNavigation.popToRoot(componentId, mergeOptions);\n    }\n    /**\n     * Sets new root component to stack.\n     */\n    setStackRoot(componentId, layout) {\n        return this.concreteNavigation.setStackRoot(componentId, layout);\n    }\n    /**\n     * Show overlay on top of the entire app\n     */\n    showOverlay(layout) {\n        return this.concreteNavigation.showOverlay(layout);\n    }\n    /**\n     * dismiss overlay by componentId\n     */\n    dismissOverlay(componentId) {\n        return this.concreteNavigation.dismissOverlay(componentId);\n    }\n    /**\n     * dismiss all overlays\n     */\n    dismissAllOverlays() {\n        return this.concreteNavigation.dismissAllOverlays();\n    }\n    /**\n     * Resolves arguments passed on launch\n     */\n    getLaunchArgs() {\n        return this.concreteNavigation.getLaunchArgs();\n    }\n    /**\n     * Obtain the events registry instance\n     */\n    events() {\n        return this.concreteNavigation.events();\n    }\n    /**\n     * Constants coming from native\n     */\n    async constants() {\n        return await this.concreteNavigation.constants();\n    }\n    constantsSync() {\n        return this.concreteNavigation.constantsSync();\n    }\n    get TouchablePreview() {\n        return this.concreteNavigation.TouchablePreview;\n    }\n    mockNativeComponents(mockedNativeCommandsSender, mockedNativeEventsReceiver, mockedAppRegistryService) {\n        this.concreteNavigation = this.createConcreteNavigation(mockedNativeCommandsSender, mockedNativeEventsReceiver, mockedAppRegistryService);\n    }\n    get mock() {\n        return {\n            store: this.concreteNavigation.store,\n        };\n    }\n}\nexports.NavigationDelegate = NavigationDelegate;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
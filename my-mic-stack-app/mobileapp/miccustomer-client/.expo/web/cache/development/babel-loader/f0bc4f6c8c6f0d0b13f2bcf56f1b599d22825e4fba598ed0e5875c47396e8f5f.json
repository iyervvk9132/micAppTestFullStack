{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComponentEventsObserver = void 0;\nvar tslib_1 = require(\"tslib\");\nvar isString_1 = (0, tslib_1.__importDefault)(require(\"lodash/isString\"));\nvar isNil_1 = (0, tslib_1.__importDefault)(require(\"lodash/isNil\"));\nvar uniqueId_1 = (0, tslib_1.__importDefault)(require(\"lodash/uniqueId\"));\nvar unset_1 = (0, tslib_1.__importDefault)(require(\"lodash/unset\"));\nvar forEach_1 = (0, tslib_1.__importDefault)(require(\"lodash/forEach\"));\nvar ComponentEventsObserver = function () {\n  function ComponentEventsObserver(nativeEventsReceiver, store) {\n    _classCallCheck(this, ComponentEventsObserver);\n    this.listeners = {};\n    this.alreadyRegistered = false;\n    this.nativeEventsReceiver = nativeEventsReceiver;\n    this.store = store;\n    this.notifyComponentWillAppear = this.notifyComponentWillAppear.bind(this);\n    this.notifyComponentDidAppear = this.notifyComponentDidAppear.bind(this);\n    this.notifyComponentDidDisappear = this.notifyComponentDidDisappear.bind(this);\n    this.notifyNavigationButtonPressed = this.notifyNavigationButtonPressed.bind(this);\n    this.notifySearchBarUpdated = this.notifySearchBarUpdated.bind(this);\n    this.notifySearchBarCancelPressed = this.notifySearchBarCancelPressed.bind(this);\n    this.notifyPreviewCompleted = this.notifyPreviewCompleted.bind(this);\n    this.notifyScreenPopped = this.notifyScreenPopped.bind(this);\n  }\n  _createClass(ComponentEventsObserver, [{\n    key: \"registerOnceForAllComponentEvents\",\n    value: function registerOnceForAllComponentEvents() {\n      if (this.alreadyRegistered) {\n        return;\n      }\n      this.alreadyRegistered = true;\n      this.nativeEventsReceiver.registerComponentWillAppearListener(this.notifyComponentWillAppear);\n      this.nativeEventsReceiver.registerComponentDidAppearListener(this.notifyComponentDidAppear);\n      this.nativeEventsReceiver.registerComponentDidDisappearListener(this.notifyComponentDidDisappear);\n      this.nativeEventsReceiver.registerNavigationButtonPressedListener(this.notifyNavigationButtonPressed);\n      this.nativeEventsReceiver.registerSearchBarUpdatedListener(this.notifySearchBarUpdated);\n      this.nativeEventsReceiver.registerSearchBarCancelPressedListener(this.notifySearchBarCancelPressed);\n      this.nativeEventsReceiver.registerPreviewCompletedListener(this.notifyPreviewCompleted);\n      this.nativeEventsReceiver.registerScreenPoppedListener(this.notifyPreviewCompleted);\n    }\n  }, {\n    key: \"bindComponent\",\n    value: function bindComponent(component, componentId) {\n      var computedComponentId = componentId || component.props.componentId;\n      if (!(0, isString_1.default)(computedComponentId)) {\n        throw new Error(`bindComponent expects a component with a componentId in props or a componentId as the second argument`);\n      }\n      return this.registerComponentListener(component, computedComponentId);\n    }\n  }, {\n    key: \"registerComponentListener\",\n    value: function registerComponentListener(listener, componentId) {\n      var _this = this;\n      if (!(0, isString_1.default)(componentId)) {\n        throw new Error(`registerComponentListener expects a componentId as the second argument`);\n      }\n      if ((0, isNil_1.default)(this.listeners[componentId])) {\n        this.listeners[componentId] = {};\n      }\n      var key = (0, uniqueId_1.default)();\n      this.listeners[componentId][key] = listener;\n      return {\n        remove: function remove() {\n          return (0, unset_1.default)(_this.listeners[componentId], key);\n        }\n      };\n    }\n  }, {\n    key: \"unmounted\",\n    value: function unmounted(componentId) {\n      (0, unset_1.default)(this.listeners, componentId);\n    }\n  }, {\n    key: \"notifyComponentWillAppear\",\n    value: function notifyComponentWillAppear(event) {\n      event.passProps = this.store.getPropsForId(event.componentId);\n      this.triggerOnAllListenersByComponentId(event, 'componentWillAppear');\n    }\n  }, {\n    key: \"notifyComponentDidAppear\",\n    value: function notifyComponentDidAppear(event) {\n      event.passProps = this.store.getPropsForId(event.componentId);\n      this.triggerOnAllListenersByComponentId(event, 'componentDidAppear');\n    }\n  }, {\n    key: \"notifyComponentDidDisappear\",\n    value: function notifyComponentDidDisappear(event) {\n      this.triggerOnAllListenersByComponentId(event, 'componentDidDisappear');\n    }\n  }, {\n    key: \"notifyNavigationButtonPressed\",\n    value: function notifyNavigationButtonPressed(event) {\n      this.triggerOnAllListenersByComponentId(event, 'navigationButtonPressed');\n    }\n  }, {\n    key: \"notifySearchBarUpdated\",\n    value: function notifySearchBarUpdated(event) {\n      this.triggerOnAllListenersByComponentId(event, 'searchBarUpdated');\n    }\n  }, {\n    key: \"notifySearchBarCancelPressed\",\n    value: function notifySearchBarCancelPressed(event) {\n      this.triggerOnAllListenersByComponentId(event, 'searchBarCancelPressed');\n    }\n  }, {\n    key: \"notifyPreviewCompleted\",\n    value: function notifyPreviewCompleted(event) {\n      this.triggerOnAllListenersByComponentId(event, 'previewCompleted');\n    }\n  }, {\n    key: \"notifyScreenPopped\",\n    value: function notifyScreenPopped(event) {\n      this.triggerOnAllListenersByComponentId(event, 'screenPopped');\n    }\n  }, {\n    key: \"triggerOnAllListenersByComponentId\",\n    value: function triggerOnAllListenersByComponentId(event, method) {\n      (0, forEach_1.default)(this.listeners[event.componentId], function (component) {\n        if (component && component[method]) {\n          component[method](event);\n        }\n      });\n    }\n  }]);\n  return ComponentEventsObserver;\n}();\nexports.ComponentEventsObserver = ComponentEventsObserver;","map":{"version":3,"names":["_classCallCheck","require","_createClass","Object","defineProperty","exports","value","ComponentEventsObserver","tslib_1","isString_1","__importDefault","isNil_1","uniqueId_1","unset_1","forEach_1","nativeEventsReceiver","store","listeners","alreadyRegistered","notifyComponentWillAppear","bind","notifyComponentDidAppear","notifyComponentDidDisappear","notifyNavigationButtonPressed","notifySearchBarUpdated","notifySearchBarCancelPressed","notifyPreviewCompleted","notifyScreenPopped","key","registerOnceForAllComponentEvents","registerComponentWillAppearListener","registerComponentDidAppearListener","registerComponentDidDisappearListener","registerNavigationButtonPressedListener","registerSearchBarUpdatedListener","registerSearchBarCancelPressedListener","registerPreviewCompletedListener","registerScreenPoppedListener","bindComponent","component","componentId","computedComponentId","props","default","Error","registerComponentListener","listener","_this","remove","unmounted","event","passProps","getPropsForId","triggerOnAllListenersByComponentId","method"],"sources":["D:/companies/vishnu/micApp/rev0.0/micAppTestFullStack/node_modules/react-native-navigation/lib/dist/src/events/ComponentEventsObserver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComponentEventsObserver = void 0;\nconst tslib_1 = require(\"tslib\");\nconst isString_1 = (0, tslib_1.__importDefault)(require(\"lodash/isString\"));\nconst isNil_1 = (0, tslib_1.__importDefault)(require(\"lodash/isNil\"));\nconst uniqueId_1 = (0, tslib_1.__importDefault)(require(\"lodash/uniqueId\"));\nconst unset_1 = (0, tslib_1.__importDefault)(require(\"lodash/unset\"));\nconst forEach_1 = (0, tslib_1.__importDefault)(require(\"lodash/forEach\"));\nclass ComponentEventsObserver {\n    nativeEventsReceiver;\n    store;\n    listeners = {};\n    alreadyRegistered = false;\n    constructor(nativeEventsReceiver, store) {\n        this.nativeEventsReceiver = nativeEventsReceiver;\n        this.store = store;\n        this.notifyComponentWillAppear = this.notifyComponentWillAppear.bind(this);\n        this.notifyComponentDidAppear = this.notifyComponentDidAppear.bind(this);\n        this.notifyComponentDidDisappear = this.notifyComponentDidDisappear.bind(this);\n        this.notifyNavigationButtonPressed = this.notifyNavigationButtonPressed.bind(this);\n        this.notifySearchBarUpdated = this.notifySearchBarUpdated.bind(this);\n        this.notifySearchBarCancelPressed = this.notifySearchBarCancelPressed.bind(this);\n        this.notifyPreviewCompleted = this.notifyPreviewCompleted.bind(this);\n        this.notifyScreenPopped = this.notifyScreenPopped.bind(this);\n    }\n    registerOnceForAllComponentEvents() {\n        if (this.alreadyRegistered) {\n            return;\n        }\n        this.alreadyRegistered = true;\n        this.nativeEventsReceiver.registerComponentWillAppearListener(this.notifyComponentWillAppear);\n        this.nativeEventsReceiver.registerComponentDidAppearListener(this.notifyComponentDidAppear);\n        this.nativeEventsReceiver.registerComponentDidDisappearListener(this.notifyComponentDidDisappear);\n        this.nativeEventsReceiver.registerNavigationButtonPressedListener(this.notifyNavigationButtonPressed);\n        this.nativeEventsReceiver.registerSearchBarUpdatedListener(this.notifySearchBarUpdated);\n        this.nativeEventsReceiver.registerSearchBarCancelPressedListener(this.notifySearchBarCancelPressed);\n        this.nativeEventsReceiver.registerPreviewCompletedListener(this.notifyPreviewCompleted);\n        this.nativeEventsReceiver.registerScreenPoppedListener(this.notifyPreviewCompleted);\n    }\n    bindComponent(component, componentId) {\n        const computedComponentId = componentId || component.props.componentId;\n        if (!(0, isString_1.default)(computedComponentId)) {\n            throw new Error(`bindComponent expects a component with a componentId in props or a componentId as the second argument`);\n        }\n        return this.registerComponentListener(component, computedComponentId);\n    }\n    registerComponentListener(listener, componentId) {\n        if (!(0, isString_1.default)(componentId)) {\n            throw new Error(`registerComponentListener expects a componentId as the second argument`);\n        }\n        if ((0, isNil_1.default)(this.listeners[componentId])) {\n            this.listeners[componentId] = {};\n        }\n        const key = (0, uniqueId_1.default)();\n        this.listeners[componentId][key] = listener;\n        return { remove: () => (0, unset_1.default)(this.listeners[componentId], key) };\n    }\n    unmounted(componentId) {\n        (0, unset_1.default)(this.listeners, componentId);\n    }\n    notifyComponentWillAppear(event) {\n        event.passProps = this.store.getPropsForId(event.componentId);\n        this.triggerOnAllListenersByComponentId(event, 'componentWillAppear');\n    }\n    notifyComponentDidAppear(event) {\n        event.passProps = this.store.getPropsForId(event.componentId);\n        this.triggerOnAllListenersByComponentId(event, 'componentDidAppear');\n    }\n    notifyComponentDidDisappear(event) {\n        this.triggerOnAllListenersByComponentId(event, 'componentDidDisappear');\n    }\n    notifyNavigationButtonPressed(event) {\n        this.triggerOnAllListenersByComponentId(event, 'navigationButtonPressed');\n    }\n    notifySearchBarUpdated(event) {\n        this.triggerOnAllListenersByComponentId(event, 'searchBarUpdated');\n    }\n    notifySearchBarCancelPressed(event) {\n        this.triggerOnAllListenersByComponentId(event, 'searchBarCancelPressed');\n    }\n    notifyPreviewCompleted(event) {\n        this.triggerOnAllListenersByComponentId(event, 'previewCompleted');\n    }\n    notifyScreenPopped(event) {\n        this.triggerOnAllListenersByComponentId(event, 'screenPopped');\n    }\n    triggerOnAllListenersByComponentId(event, method) {\n        (0, forEach_1.default)(this.listeners[event.componentId], (component) => {\n            if (component && component[method]) {\n                component[method](event);\n            }\n        });\n    }\n}\nexports.ComponentEventsObserver = ComponentEventsObserver;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
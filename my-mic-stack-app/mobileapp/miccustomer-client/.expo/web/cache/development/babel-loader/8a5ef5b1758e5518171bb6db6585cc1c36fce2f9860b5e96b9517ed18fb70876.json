{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Store = void 0;\nvar Store = function () {\n  function Store() {\n    _classCallCheck(this, Store);\n    this.componentsByName = {};\n    this.propsById = {};\n    this.pendingPropsById = {};\n    this.componentsInstancesById = {};\n    this.wrappedComponents = {};\n  }\n  _createClass(Store, [{\n    key: \"updateProps\",\n    value: function updateProps(componentId, props, callback) {\n      this.mergeNewPropsForId(componentId, props);\n      var component = this.componentsInstancesById[componentId];\n      if (component) {\n        component.setProps(props, callback);\n      }\n    }\n  }, {\n    key: \"setPendingProps\",\n    value: function setPendingProps(componentId, newProps) {\n      this.pendingPropsById[componentId] = newProps;\n    }\n  }, {\n    key: \"getPropsForId\",\n    value: function getPropsForId(componentId) {\n      return this.pendingPropsById[componentId] || this.propsById[componentId] || {};\n    }\n  }, {\n    key: \"consumePendingProps\",\n    value: function consumePendingProps(componentId) {\n      if (this.pendingPropsById[componentId]) {\n        this.propsById[componentId] = this.pendingPropsById[componentId];\n        delete this.pendingPropsById[componentId];\n      }\n    }\n  }, {\n    key: \"mergeNewPropsForId\",\n    value: function mergeNewPropsForId(componentId, newProps) {\n      var currentProps = this.getPropsForId(componentId);\n      this.propsById[componentId] = _objectSpread(_objectSpread({}, currentProps), newProps);\n    }\n  }, {\n    key: \"clearComponent\",\n    value: function clearComponent(componentId) {\n      delete this.propsById[componentId];\n      delete this.componentsInstancesById[componentId];\n    }\n  }, {\n    key: \"setComponentClassForName\",\n    value: function setComponentClassForName(componentName, ComponentClass) {\n      delete this.wrappedComponents[componentName];\n      this.componentsByName[componentName.toString()] = ComponentClass;\n    }\n  }, {\n    key: \"getComponentClassForName\",\n    value: function getComponentClassForName(componentName) {\n      this.ensureClassForName(componentName);\n      return this.componentsByName[componentName.toString()];\n    }\n  }, {\n    key: \"ensureClassForName\",\n    value: function ensureClassForName(componentName) {\n      if (!this.componentsByName[componentName.toString()] && this.lazyRegistratorFn) {\n        this.lazyRegistratorFn(componentName);\n      }\n    }\n  }, {\n    key: \"setComponentInstance\",\n    value: function setComponentInstance(id, component) {\n      this.componentsInstancesById[id] = component;\n    }\n  }, {\n    key: \"getComponentInstance\",\n    value: function getComponentInstance(id) {\n      return this.componentsInstancesById[id];\n    }\n  }, {\n    key: \"setWrappedComponent\",\n    value: function setWrappedComponent(componentName, wrappedComponent) {\n      this.wrappedComponents[componentName] = wrappedComponent;\n    }\n  }, {\n    key: \"hasRegisteredWrappedComponent\",\n    value: function hasRegisteredWrappedComponent(componentName) {\n      return componentName in this.wrappedComponents;\n    }\n  }, {\n    key: \"getWrappedComponent\",\n    value: function getWrappedComponent(componentName) {\n      return this.wrappedComponents[componentName];\n    }\n  }, {\n    key: \"setLazyComponentRegistrator\",\n    value: function setLazyComponentRegistrator(lazyRegistratorFn) {\n      this.lazyRegistratorFn = lazyRegistratorFn;\n    }\n  }]);\n  return Store;\n}();\nexports.Store = Store;","map":{"version":3,"names":["_defineProperty","require","_classCallCheck","_createClass","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","exports","value","Store","componentsByName","propsById","pendingPropsById","componentsInstancesById","wrappedComponents","key","updateProps","componentId","props","callback","mergeNewPropsForId","component","setProps","setPendingProps","newProps","getPropsForId","consumePendingProps","currentProps","clearComponent","setComponentClassForName","componentName","ComponentClass","toString","getComponentClassForName","ensureClassForName","lazyRegistratorFn","setComponentInstance","id","getComponentInstance","setWrappedComponent","wrappedComponent","hasRegisteredWrappedComponent","getWrappedComponent","setLazyComponentRegistrator"],"sources":["D:/companies/vishnu/micApp/rev0.0/micAppTestFullStack/node_modules/react-native-navigation/lib/dist/src/components/Store.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Store = void 0;\nclass Store {\n    componentsByName = {};\n    propsById = {};\n    pendingPropsById = {};\n    componentsInstancesById = {};\n    wrappedComponents = {};\n    lazyRegistratorFn;\n    updateProps(componentId, props, callback) {\n        this.mergeNewPropsForId(componentId, props);\n        const component = this.componentsInstancesById[componentId];\n        if (component) {\n            component.setProps(props, callback);\n        }\n    }\n    setPendingProps(componentId, newProps) {\n        this.pendingPropsById[componentId] = newProps;\n    }\n    getPropsForId(componentId) {\n        return this.pendingPropsById[componentId] || this.propsById[componentId] || {};\n    }\n    consumePendingProps(componentId) {\n        if (this.pendingPropsById[componentId]) {\n            this.propsById[componentId] = this.pendingPropsById[componentId];\n            delete this.pendingPropsById[componentId];\n        }\n    }\n    mergeNewPropsForId(componentId, newProps) {\n        const currentProps = this.getPropsForId(componentId);\n        this.propsById[componentId] = {\n            ...currentProps,\n            ...newProps,\n        };\n    }\n    clearComponent(componentId) {\n        delete this.propsById[componentId];\n        delete this.componentsInstancesById[componentId];\n    }\n    setComponentClassForName(componentName, ComponentClass) {\n        delete this.wrappedComponents[componentName];\n        this.componentsByName[componentName.toString()] = ComponentClass;\n    }\n    getComponentClassForName(componentName) {\n        this.ensureClassForName(componentName);\n        return this.componentsByName[componentName.toString()];\n    }\n    ensureClassForName(componentName) {\n        if (!this.componentsByName[componentName.toString()] && this.lazyRegistratorFn) {\n            this.lazyRegistratorFn(componentName);\n        }\n    }\n    setComponentInstance(id, component) {\n        this.componentsInstancesById[id] = component;\n    }\n    getComponentInstance(id) {\n        return this.componentsInstancesById[id];\n    }\n    setWrappedComponent(componentName, wrappedComponent) {\n        this.wrappedComponents[componentName] = wrappedComponent;\n    }\n    hasRegisteredWrappedComponent(componentName) {\n        return componentName in this.wrappedComponents;\n    }\n    getWrappedComponent(componentName) {\n        return this.wrappedComponents[componentName];\n    }\n    setLazyComponentRegistrator(lazyRegistratorFn) {\n        this.lazyRegistratorFn = lazyRegistratorFn;\n    }\n}\nexports.Store = Store;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}